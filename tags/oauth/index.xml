<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oauth on vim, git, aws and other three-letter words</title>
    <link>https://serebrov.github.io/tags/oauth/</link>
    <description>Recent content in oauth on vim, git, aws and other three-letter words</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Mar 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://serebrov.github.io/tags/oauth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>oauth 1.0 notes</title>
      <link>https://serebrov.github.io/html/2012-02-28-git-default-color-diff.html</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://serebrov.github.io/html/2012-02-28-git-default-color-diff.html</guid>
      <description>oAuth 1.0 flow A good explanation image from oauth.net:
Flow description:
Consumer has Consumer Key and Consumer Secret (shared secret) A) Consumer requests Request Token call get_request_token from Service Provider, send oauth_consumer_key oauth_signature_method oauth_signature &amp;hellip; here oauth_signature - is signature of the request created using Consumer Secret, simplified example: $signature = md5($request_text . $consumer_secret) both sides (Consumer and Service Provider) knows consumer_secret and able to perform this operation, so Service Provider can check whether signature is valid B) Service provider returns Request Token oauth_token oauth_token_secret C) Consumer redirects User to Service Provider oauth_token (request token from B) D) User confirms access and Service Provider redirects User to Consumer oauth_token (request token from B) oauth_verifier (request token verifier) E) Consumer requests Access Token call get_access_token, send oauth_consumer_key oauth_token (request token from B) oauth_signature_method oauth_signature &amp;hellip; oauth_verifier here oauth_signature - is signature of the request created using request token secret from B note, that on step A Consumer uses his Consumer Secret to sign the request and here he use request token secret F) Service provider grants Access Token oauth_token oauth_token_secret G) Consumer Accesses Protected Resources request includes oauth_consumer_key oauth_token (request token from F) oauth_signature_method oauth_signature &amp;hellip; here oauth_signature created using Access Token secret Links wikipedia</description>
    </item>
    
  </channel>
</rss>
