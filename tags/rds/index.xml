<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rds on vim, git, aws and other three-letter words</title><link>https://serebrov.github.io/tags/rds/</link><description>Recent content in rds on vim, git, aws and other three-letter words</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 28 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://serebrov.github.io/tags/rds/index.xml" rel="self" type="application/rss+xml"/><item><title>Elastic Beanstalk - how to configure access to the external RDS database</title><link>https://serebrov.github.io/html/2023-10-28-elastic-beanstalk-rds-access.html</link><pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate><guid>https://serebrov.github.io/html/2023-10-28-elastic-beanstalk-rds-access.html</guid><description>I used to configure ElasticBeanstalk access to the external RDS database by editing inbound rules for the security group attached to the database. This is inconvenient because there is always a risk of breaking something, especially if there are several environments accessing the database and we have multiple inbound rules.
A more convenient method is to use a &amp;ldquo;proxy&amp;rdquo; security group:
Create a new security group named rds-{database name}-access Add this group to the RDS security group inbound rules, allowing access to the DB port (such as 5432 for PostgreSQL) Add proxy group to the ElasticBeanstalk security groups The convenience is that we do not have to edit security groups anymore, we just add the &amp;ldquo;proxy&amp;rdquo; group in environment settings.</description></item><item><title>AWS PostgreSQL RDS - remaining connection slots are reserved error</title><link>https://serebrov.github.io/html/2015-09-22-aws-postgresql-max-connections.html</link><pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate><guid>https://serebrov.github.io/html/2015-09-22-aws-postgresql-max-connections.html</guid><description>Today I had a problem with PostgreSQL connection, both my application and psql tool returned an error:
FATAL: remaining connection slots are reserved for non-replication superuser connections The PostgreSQL server was running on the db.t1.micro RDS instance and the &amp;lsquo;Current activity&amp;rsquo; column showed &amp;lsquo;22 connections&amp;rsquo; and a red line which should represent a connection limit was far away from the 22 value.
Here is how it looked:
.
And this connection information is actually misleading - it shows 22 connections and it looks like around 30% consumed.</description></item></channel></rss>