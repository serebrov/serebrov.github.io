<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vue on vim, git, aws and other three-letter words</title><link>https://serebrov.github.io/tags/vue/</link><description>Recent content in vue on vim, git, aws and other three-letter words</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 05 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://serebrov.github.io/tags/vue/index.xml" rel="self" type="application/rss+xml"/><item><title>Profile Vue CLI Service Build (actually webpack build)</title><link>https://serebrov.github.io/html/2024-04-05-profile-vue-cli-service-build.html</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://serebrov.github.io/html/2024-04-05-profile-vue-cli-service-build.html</guid><description>How to Profile Vue CLI Service Build (webpack build) The vue cli build is managed by the build command of the @vue/cli-service package. The command is located in node_modules/@vue/cli-service/lib/commands/build/index.js.
Looking into the code, there is not too much to debug or profile here, it boils down to this:
// Compose the webpackConfig object // ... // Run webpack: return new Promise((resolve, reject) =&amp;gt; { webpack(webpackConfig, (err, stats) =&amp;gt; { ... }) }) So the actual problem is webpack build profiling.</description></item><item><title>Vue CLI Service Build Out of Memory Error</title><link>https://serebrov.github.io/html/2024-04-05-profile-vue-cli-service-build-out-of-memory.html</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://serebrov.github.io/html/2024-04-05-profile-vue-cli-service-build-out-of-memory.html</guid><description>Solving the frontend build out-of-memory error If you encounter an out-of-memory error during the frontend build, you can increase the memory limit for the node process by setting the NODE_OPTIONS environment variable:
export NODE_OPTIONS=--max_old_space_size=8192 npm run build -- --mode production Note that it should be enough to build the frontend application with the default memory limit. Increasing the limit is a temporary measure to be able to profile and debug the build process.</description></item><item><title>Vue.js Cli: How to Use Multiple vue.config.js Configs</title><link>https://serebrov.github.io/html/2020-05-03-vue-cli-multiple-configs.html</link><pubDate>Sat, 02 May 2020 21:00:00 +0000</pubDate><guid>https://serebrov.github.io/html/2020-05-03-vue-cli-multiple-configs.html</guid><description>It can be useful to have more than one configuration file, for example, to build several code bundles.
The config file to use can be set with VUE_CLI_SERVICE_CONFIG_PATH environment variable:
# Build using vue.config.public.js CONF=`realpath vue.config.public.js` VUE_CLI_SERVICE_CONFIG_PATH=$CONF npm run build -- --mode production # build using vue.config.js npm run build -- --mode production Where npm run build is defined in package.json as vue-cli-service build.
It is also possible to create several bundles using vue cli multi-page mode, but in this case we will have big common js and css &amp;ldquo;vendors&amp;rdquo; package.</description></item></channel></rss>