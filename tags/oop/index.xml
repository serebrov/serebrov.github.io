<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oop on vim, git, aws and other three-letter words</title>
    <link>https://serebrov.github.io/tags/oop/</link>
    <description>Recent content in oop on vim, git, aws and other three-letter words</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://serebrov.github.io/tags/oop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OOP SOLID Principles &#34;L&#34; - Liskov Substitution Principle</title>
      <link>https://serebrov.github.io/html/2016-02-18-oop-solid-l-liskov-substitution-principle.md</link>
      <pubDate>Thu, 18 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://serebrov.github.io/html/2016-02-18-oop-solid-l-liskov-substitution-principle.md</guid>
      <description>According to the Wikipedia the Liskov Substitution Principle (LSP) is defined as:
Subtype Requirement: Let f(x) be a property provable about objects x of type T. Then f(y) should be true for objects y of type S where S is a subtype of T. The basic idea - if you have an object of type T then you can also use objects of its subclasses instead of it.
Or, in other words: the subclass should behave the same way as the base class.</description>
    </item>
    
  </channel>
</rss>